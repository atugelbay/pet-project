services:
  db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - chat_net
  adminer:
    image: adminer
    restart: always
    ports:
      - "8081:8080"
    depends_on:
      - db
    networks:
      - chat_net
  redis:
    image: redis:7-alpine
    networks:
      - chat_net
  app:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      - DB_USER
      - DB_PASSWORD
      - DB_NAME
      - DB_HOST
      - DB_PORT
      - REDIS_HOST
      - REDIS_PORT
      - JWT_SECRET
      - JWT_EXPIRES_IN
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "8080:8080"
    networks:
      - chat_net
      
volumes:
  pgdata:

networks:
  chat_net: